services:
  # default configuration for services in *this* file
  _defaults: # added in symfony 3.3
    # -added in symfony 3.3
    # -inject dependencies automatically
    autowire: true
    # -added in symfony 3.3
    # -The container will automatically apply certain configuration to your services, based on your service's
    #  class|interface implemented.
    # -This is mostly used to auto-tag your services.
    # -auto-tag doesn't work for the tags that require attributes.
    autoconfigure: true
    # -if the service is not public(private), you can't use the get method
    # of the container
    # -type-hint works
    # -to make the service public you can just ovverride this setting in service definition.
    public: false

  # the namespace prefix for classes (must end in \)
  AppBundle\: # added in symfony 3.3
    # accepts glob pattern => import services
    resource: '../../src/AppBundle/*'
    # you can exclude directories or files
    # but if a service is unused, it's removed anyway
    exclude: '../../src/AppBundle/{Entity, Repository}'

    # the service id of the classes is their class name
    # now we can automatically use any classes from the src/AppBundle directory as a service,
    # without needing to manually configure it.

  # these were imported above, but we want to add some extra config
  # controllers are imported separately to make sure they're public
  # and have a tag that allows actions to type-hint services
  AppBundle\Controller\:
    resource: '../../src/AppBundle/Controller'
    # apply some configuration to these services
    public: true
    tags: ['controller.service_arguments']

  # add more services, or override services that need manual wiring
      # AppBundle\Service\ExampleService:
      #     arguments:
      #         $someArgument: 'some_value'